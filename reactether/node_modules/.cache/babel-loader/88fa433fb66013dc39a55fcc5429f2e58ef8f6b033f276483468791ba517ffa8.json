{"ast":null,"code":"var _jsxFileName = \"/Users/notorioushong/Desktop/EtherScanServer/reactether/src/pages/account.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  const [data, setData] = useState('');\n  const [keyword, setKeyword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const onChange = event => setKeyword(event.target.value);\n  async function axiosData(keyword) {\n    try {\n      // 요청이 시작 할 때에는 error를 초기화하고\n      setError(null);\n      // loading 상태를 true 로 바꿉니다.\n      setLoading(true);\n      await axios.get(`https://api-goerli.etherscan.io/api?module=account&action=balance&address=${keyword}&tag=latest&apikey=PDANBSZU2XWSZAFMQG3EBUX3NRECWBX59E`).then(res => {\n        setData(res.data);\n        console.log(res.data);\n      });\n    } catch (err) {\n      setError(err);\n    }\n    setLoading(false);\n  }\n\n  //비동기 Side Effect(axios API요청)를 useEffect처리\n  useEffect(() => {\n    axiosData(keyword);\n  }, [keyword]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uB529\\uC911..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 23\n  }, this);\n\n  // 아직 users가 받아와 지지 않았을 때는 아무것도 표시되지 않도록 해줍니다.\n  if (!data) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.result === \"Error! Invalid address format\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please input proper account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 61\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [data.result / 1000000000000000000, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 102\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Copy and paste your account..\",\n        value: keyword,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n_s(Account, \"3EoEyvBSo8ZPW4K4Xnyi3QHF7G4=\");\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useEffect","useState","axios","Account","data","setData","keyword","setKeyword","loading","setLoading","error","setError","onChange","event","target","value","axiosData","get","then","res","console","log","err","result"],"sources":["/Users/notorioushong/Desktop/EtherScanServer/reactether/src/pages/account.js"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nfunction Account() {\n\n    const [data, setData] = useState('');\n    const [keyword, setKeyword] = useState('');\n  \n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n  \n    const onChange = (event) => setKeyword(event.target.value);\n      \n    async function axiosData(keyword) {\n        try{\n          // 요청이 시작 할 때에는 error를 초기화하고\n          setError(null);\n          // loading 상태를 true 로 바꿉니다.\n          setLoading(true);\n    \n          await axios.get(`https://api-goerli.etherscan.io/api?module=account&action=balance&address=${keyword}&tag=latest&apikey=PDANBSZU2XWSZAFMQG3EBUX3NRECWBX59E`)\n          .then((res) => { setData(res.data); console.log(res.data); });\n    \n        } catch(err) {\n          setError(err);\n        }\n        setLoading(false);\n    } \n  \n    //비동기 Side Effect(axios API요청)를 useEffect처리\n    useEffect(() => {\n    axiosData(keyword);\n    }, [keyword]);\n  \n  \n  \n    if (loading) return <div>로딩중..</div>; \n    if (error) return <div>에러가 발생했습니다</div>;\n    \n    // 아직 users가 받아와 지지 않았을 때는 아무것도 표시되지 않도록 해줍니다.\n    if (!data) return null;\n    \n  \n    return(\n      <div>\n        { data.result === \"Error! Invalid address format\" ? <div>Please input proper account</div> : <div>{data.result/1000000000000000000} ETH</div> }\n        <form>\n          <input type=\"text\" placeholder=\"Copy and paste your account..\" value={keyword} onChange={onChange}/>\n        </form>    \n      </div>\n    )\n}\n\nexport default Account;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,OAAO,GAAG;EAAA;EAEf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,QAAQ,GAAIC,KAAK,IAAKN,UAAU,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAE1D,eAAeC,SAAS,CAACV,OAAO,EAAE;IAC9B,IAAG;MACD;MACAK,QAAQ,CAAC,IAAI,CAAC;MACd;MACAF,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAMP,KAAK,CAACe,GAAG,CAAE,6EAA4EX,OAAQ,uDAAsD,CAAC,CAC3JY,IAAI,CAAEC,GAAG,IAAK;QAAEd,OAAO,CAACc,GAAG,CAACf,IAAI,CAAC;QAAEgB,OAAO,CAACC,GAAG,CAACF,GAAG,CAACf,IAAI,CAAC;MAAE,CAAC,CAAC;IAE/D,CAAC,CAAC,OAAMkB,GAAG,EAAE;MACXX,QAAQ,CAACW,GAAG,CAAC;IACf;IACAb,UAAU,CAAC,KAAK,CAAC;EACrB;;EAEA;EACAT,SAAS,CAAC,MAAM;IAChBgB,SAAS,CAACV,OAAO,CAAC;EAClB,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAIb,IAAIE,OAAO,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAgB;EACpC,IAAIE,KAAK,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAqB;;EAEvC;EACA,IAAI,CAACN,IAAI,EAAE,OAAO,IAAI;EAGtB,oBACE;IAAA,WACIA,IAAI,CAACmB,MAAM,KAAK,+BAA+B,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsC,gBAAG;MAAA,WAAMnB,IAAI,CAACmB,MAAM,GAAC,mBAAmB;IAAA;MAAA;MAAA;MAAA;IAAA,QAAW,eAC7I;MAAA,uBACE;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,+BAA+B;QAAC,KAAK,EAAEjB,OAAQ;QAAC,QAAQ,EAAEM;MAAS;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC/F;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEZ;AAAC,GAhDQT,OAAO;AAAA,KAAPA,OAAO;AAkDhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}