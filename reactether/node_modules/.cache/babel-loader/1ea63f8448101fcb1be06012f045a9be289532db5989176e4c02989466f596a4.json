{"ast":null,"code":"var _jsxFileName = \"/Users/notorioushong/Desktop/EtherScanServer/reactether/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from 'react';\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function Account() {\n  _s();\n  const accountAPIurl = 'https://api-goerli.etherscan.io/api?module=account&action=balance&address=0x247b669CbDD58FCa982DBf337C5D94880852E3Fa&tag=latest&apikey=PDANBSZU2XWSZAFMQG3EBUX3NRECWBX59E';\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  try {\n    // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n    setError(null);\n    setData(null);\n    // loading 상태를 true 로 바꿉니다.\n    setLoading(true);\n    const result = await axios.get(accountAPIurl).then(response => {\n      return response.json();\n    }).then(value => {\n      return value;\n    });\n    setData(result);\n  } catch (err) {\n    setData(err);\n  }\n  useEffect(() => {\n    const axiosData = async () => {\n      const result = await axios.get(accountAPIurl).then(response => {\n        return response.json();\n      }).then(value => {\n        return value;\n      });\n      setData(result);\n    };\n    axiosData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Account, \"v5inua6mCP5CN8A+E7ULWpnNGvM=\");\n_c = Account;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/account\",\n            children: \"Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"features\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/account\",\n            element: /*#__PURE__*/_jsxDEV(Account, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 47\n            }, this),\n            children: \"Accounts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Account\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Routes","Route","Link","useEffect","useState","axios","Account","accountAPIurl","data","setData","loading","setLoading","error","setError","result","get","then","response","json","value","err","axiosData","App"],"sources":["/Users/notorioushong/Desktop/EtherScanServer/reactether/src/App.js"],"sourcesContent":["import './App.css';\n\nimport React from 'react';\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\n\n\nasync function Account() {\n  const accountAPIurl = 'https://api-goerli.etherscan.io/api?module=account&action=balance&address=0x247b669CbDD58FCa982DBf337C5D94880852E3Fa&tag=latest&apikey=PDANBSZU2XWSZAFMQG3EBUX3NRECWBX59E';\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  try {\n    // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n    setError(null);\n    setData(null);\n    // loading 상태를 true 로 바꿉니다.\n    setLoading(true);\n\n    const result = await axios.get(accountAPIurl).then((response) => {return response.json()}).then((value) => {return value});\n    setData(result);\n\n  } catch(err) {\n    setData(err);\n  }\n\n\n  useEffect(() => {\n    const axiosData = async () => {\n      const result = await axios.get(accountAPIurl).then((response) => {return response.json()}).then((value) => {return value});\n\n      setData(result);\n    }\n\n    axiosData();\n  }, []);\n\n\n  return(\n    <ul>{data}</ul>\n\n  )\n}\n\n\n\nfunction App() {\n  return (\n\n    <BrowserRouter>\n    <div className=\"App\">\n        <nav>\n          <li>\n            <Link to=\"/account\">Account</Link>\n          </li>\n        </nav>\n\n\n        <section className=\"features\">\n            <Routes>\n              <Route path=\"/account\" element={<Account />}>Accounts</Route>\n            </Routes>\n        </section>\n    </div>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAElB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AACrE,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAG1B,eAAeC,OAAO,GAAG;EAAA;EACvB,MAAMC,aAAa,GAAG,2KAA2K;EAEjM,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,IAAI;IACF;IACAS,QAAQ,CAAC,IAAI,CAAC;IACdJ,OAAO,CAAC,IAAI,CAAC;IACb;IACAE,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMG,MAAM,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACR,aAAa,CAAC,CAACS,IAAI,CAAEC,QAAQ,IAAK;MAAC,OAAOA,QAAQ,CAACC,IAAI,EAAE;IAAA,CAAC,CAAC,CAACF,IAAI,CAAEG,KAAK,IAAK;MAAC,OAAOA,KAAK;IAAA,CAAC,CAAC;IAC1HV,OAAO,CAACK,MAAM,CAAC;EAEjB,CAAC,CAAC,OAAMM,GAAG,EAAE;IACXX,OAAO,CAACW,GAAG,CAAC;EACd;EAGAjB,SAAS,CAAC,MAAM;IACd,MAAMkB,SAAS,GAAG,YAAY;MAC5B,MAAMP,MAAM,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACR,aAAa,CAAC,CAACS,IAAI,CAAEC,QAAQ,IAAK;QAAC,OAAOA,QAAQ,CAACC,IAAI,EAAE;MAAA,CAAC,CAAC,CAACF,IAAI,CAAEG,KAAK,IAAK;QAAC,OAAOA,KAAK;MAAA,CAAC,CAAC;MAE1HV,OAAO,CAACK,MAAM,CAAC;IACjB,CAAC;IAEDO,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAGN,oBACE;IAAA,UAAKb;EAAI;IAAA;IAAA;IAAA;EAAA,QAAM;AAGnB;AAAC,GArCcF,OAAO;AAAA,KAAPA,OAAO;AAyCtB,SAASgB,GAAG,GAAG;EACb,oBAEE,QAAC,aAAa;IAAA,uBACd;MAAK,SAAS,EAAC,KAAK;MAAA,wBAChB;QAAA,uBACE;UAAA,uBACE,QAAC,IAAI;YAAC,EAAE,EAAC,UAAU;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAe;UAAA;UAAA;UAAA;QAAA;MAC/B;QAAA;QAAA;QAAA;MAAA,QACD,eAGN;QAAS,SAAS,EAAC,UAAU;QAAA,uBACzB,QAAC,MAAM;UAAA,uBACL,QAAC,KAAK;YAAC,IAAI,EAAC,UAAU;YAAC,OAAO,eAAE,QAAC,OAAO;cAAA;cAAA;cAAA;YAAA,QAAI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAiB;UAAA;UAAA;UAAA;QAAA;MACtD;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QACQ;AAElB;AAAC,MApBQA,GAAG;AAsBZ,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}